{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example 5.3.3\n",
    "$$\n",
    "\\def\\trefl{\\mathbb{3}_1^l}\n",
    "$$\n",
    "$$\n",
    "\\def\\trefr{\\mathbb{3}_1^r}\n",
    "$$\n",
    "$$\n",
    "\\def\\treflr{\\mathbb{3}_1^{l/r}}\n",
    "$$\n",
    "\n",
    "In this notebook we demonstrate the computation of the $\\hat{Z}$ invariant through knot surgery. In this example we will compute $\\pm 1$ surgery on the left handed trefoil which will lead to expressions for the $\\hat{Z}$ invariants for $\\mp \\Sigma\\left(2,3,7\\right)$.\n",
    "\n",
    "Finally, we will match the expressions we obtain with the optimal mock Jacobi theta functions transforming in the same Weil representation $m+K=42+6,14,21$.\n",
    "\n",
    "\n",
    "Following equation (2.22) of [1] we have\n",
    "$$\n",
    "\\hat{Z}_{b}(S_{\\pm 1}^{3}(\\treflr);W_{\\nu};\\tau)\\sim\\\\\n",
    "\\left(a_{-1}(\\treflr;q)\\mathcal{L}_{\\pm 1}^{(b+\\nu)}\\left[x^{{\\nu\\over 2}}  +x^{{\\nu\\over 2}-1}+ \\dots+   x^{-{\\nu\\over 2}}\\right] +\\right. \\\\\n",
    "\\left.\\sum_{m=1}^{\\infty} \\mathcal{L}_{\\pm 1}^{(b+\\nu)}\\left[\\left(x^{{\\nu\\over 2}}  +x^{{\\nu\\over 2}-1}+ \\dots+   x^{-{\\nu\\over 2}}       \\right)\\frac{a_{-m-1}(\\trefl;q)}{\\prod_{j=1}^{m}(x+x^{-1}-q^{j}-q^{-j})}\\right]\\right)\n",
    "$$\n",
    "which we will apply on a case per case basis in order to compute the invariants.\n",
    "\n",
    "In case where no defects are inserted and when $b=b_0$ the trivial spin-$c$ structure, this simplifies to\n",
    "$$\n",
    "\\hat{Z}_{b_0}(S_{\\pm 1}^{3}(\\treflr);\\tau)\\sim\\\\\\left(a_{-1}(\\treflr;q) \\mathcal{L}_{\\pm 1}^{(0)}\\left[1\\right]+ \\sum_{m=1}^{\\infty} a_{-m-1}(\\treflr;q)\\mathcal{L}_{\\pm 1}^{(0)}\\left[\\frac{1}{\\prod_{j=1}^{m}(x+x^{-1}-q^{j}-q^{-j})}\\right]\\right)\n",
    "$$\n",
    "which we can expand using equation (2.16)\n",
    "$$\n",
    "\\mathcal{L}_{-1}^{(0)}\\left[\\frac{1}{\\prod_{j=1}^{n}(x+x^{-1}-q^{j}-q^{-j})}\\right] = \\frac{q^{n^2}}{\\left(q^{n+1};q\\right)_{n}}\n",
    "$$\n",
    "for $-1$ surgery and \n",
    "$$\n",
    "\\mathcal{L}_{+1}^{(0)}\\left[\\frac{1}{\\prod_{j=1}^{n}(x+x^{-1}-q^{j}-q^{-j})}\\right] = (-1)^{n}\\frac{q^{\\frac{n(n+1)}{2}}}{\\left(q^{n+1};q\\right)_{n}}\n",
    "$$\n",
    "for $+1$ surgery.\n",
    "This leaves us with\n",
    "$$\n",
    "\\hat{Z}_{b_0}(S_{-1}^{3}(\\trefr);\\tau)\\sim\\\\ \\left(a_{-1}(\\trefr;q)P_{0}^{1,0}(q) + \\sum_{m=1}^{\\infty} a_{-m-1}(\\trefr;q)\\frac{q^{n^{2}}}{\\left(q^{m+1};q\\right)_{m}}P_{m}^{1,0}(q)\\right)~.\n",
    "$$\n",
    "and\n",
    "$$\n",
    "\\hat{Z}_{b_0}(S_{+1}^{3}(\\trefl);\\tau)\\sim\\\\ \\left(a_{-1}(\\trefl;q)P_{0}^{1,0}(q) + \\sum_{m=1}^{\\infty} a_{-m-1}(\\trefl;q)\\frac{(-1)^{m}q^{\\frac{m(m+1)}{2}}}{\\left(q^{m+1};q\\right)_{m}}P_{m}^{1,0}(q)\\right)~.\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Z_0(nu=0,Sigma(2,3,7)):  1 + (-1)*q + (-1)*q^5 + 1*q^10 + (-1)*q^11 + 1*q^18 + Order(q^20)\n",
      "Z_0(nu=0,-Sigma(2,3,7)):  1 + 1*q + 1*q^3 + 1*q^4 + 1*q^5 + 2*q^7 + 1*q^8 + 2*q^9 + 1*q^10 + 2*q^11 + 1*q^12 + 3*q^13 + 2*q^14 + 3*q^15 + 3*q^16 + 3*q^17 + 2*q^18 + 5*q^19 + Order(q^20)\n"
     ]
    }
   ],
   "source": [
    "from sage.combinat.q_analogues import q_pochhammer\n",
    "load('3d_modularity_revisited.sage')\n",
    "\n",
    "def habiro_3l(m): \n",
    "   return (-1)**m*q**(m*(m+3)/2)\n",
    "\n",
    "def habiro_3r(m): \n",
    "   return (-1)**m*q**(-m*(m+3)/2)\n",
    "\n",
    "b = 0\n",
    "zhat_surg = 0\n",
    "for n in range(7):\n",
    "    zhat_surg += habiro_3r(-n-1) * q**(n**2)/q_pochhammer(n,q**(n+1))\n",
    "print(\"Z_0(nu=0,Sigma(2,3,7)): \",(-1/q*zhat_surg).series(q,20))\n",
    "\n",
    "zhat_surg = 0\n",
    "for n in range(7):\n",
    "    zhat_surg += habiro_3l(-n-1) * (-1)**(n)*q**(n*(n+1)/2)/q_pochhammer(n,q**(n+1))\n",
    "print(\"Z_0(nu=0,-Sigma(2,3,7)): \",(-q*zhat_surg).series(q,20))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "vscode": {
     "languageId": "sage"
    }
   },
   "source": [
    "The $q$-expansions computed above match the $\\hat{Z}$ invariant for $\\Sigma(2,3,7)$ and the $F_0$ order 7 mock theta function of Ramanujan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Zhat q^(1/2)(1 - 1q^(1) - 1q^(5) + 1q^(10) - 1q^(11) + 1q^(18) + 1q^(30) - 1q^(41) + O(q^42))\n",
      "F_0:  1 + 1*q + 1*q^3 + 1*q^4 + 1*q^5 + 2*q^7 + 1*q^8 + 2*q^9 + 1*q^10 + 2*q^11 + 1*q^12 + 3*q^13 + 2*q^14 + 3*q^15 + 3*q^16 + 3*q^17 + 2*q^18 + 5*q^19 + Order(q^20)\n"
     ]
    }
   ],
   "source": [
    "from pyPlumbing import Plumbing\n",
    "P = Plumbing.from_Brieskorn([2,3,7])\n",
    "b0 = P.trivial_spin_c([\"A\",1])\n",
    "print(\"Zhat\", P.zhat([\"A\",1], b0, 20))\n",
    "F0 = sum(q**(n**2)/q_pochhammer(n,q**(n+1)) for n in range(20)).series(q,20)\n",
    "print(\"F_0: \", F0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "\\def\\trefl{\\mathbb{3}_1^l}\n",
    "$$\n",
    "$$\n",
    "\\def\\trefr{\\mathbb{3}_1^r}\n",
    "$$\n",
    "$$\n",
    "\\def\\treflr{\\mathbb{3}_1^{l/r}}\n",
    "$$\n",
    "We can compute the invariants in the $\\nu=1$ case in a similar way, starting from (2.20) we land at\n",
    "$$\n",
    "\\hat{Z}_{b_0}(S_{\\pm 1}^{3}(\\treflr);W_{1};\\tau)\\sim\\\\\\left(a_{-1}(\\treflr;q)\\mathcal{L}_{\\pm 1}^{(1)}\\left[x^{{1\\over 2}}  + x^{-{1\\over 2}}\\right] + \n",
    "\\sum_{m=1}^{\\infty} a_{-m-1}(\\treflr;q)\\mathcal{L}_{\\pm 1}^{(1)}\\left[\\frac{\\left(x^{{1\\over 2}}  + x^{-{1\\over 2}}  \\right)}{\\prod_{j=1}^{m}(x+x^{-1}-q^{j}-q^{-j})}\\right]\\right)~,\n",
    "$$\n",
    "which we expand using equation (2.24)\n",
    "$$\n",
    "\\mathcal{L}_{-1}^{(1)}\\left[\\frac{x^{1/2}+x^{-1/2} }{\\prod_{j=1}^{n}(x+x^{-1}-q^{j}-q^{-j})}\\right]  = \\frac{q^{n^2-n+\\frac{1}{4}}}{(q^{n};q)_n} \n",
    "$$\n",
    "and using (2.25)\n",
    "$$\n",
    "\\mathcal{L}_{+1}^{(1)}\\left[\\frac{x^{1/2}+x^{-1/2} }{\\prod_{j=1}^{n}(x+x^{-1}-q^{j}-q^{-j})}\\right]  =(-1)^n \\frac{q^{\\frac{n^2+n}{2}-\\frac{1}{4}}}{(q^{n};q)_n} \n",
    "$$\n",
    "leading to\n",
    "$$\n",
    "\\hat{Z}_{b_0}(S_{-1}^{3}(\\trefr);W_{1};\\tau)\\sim 2a_{-1}(\\trefr;q)q^{\\frac{1}{4}} + \n",
    "\\sum_{m=1}^{\\infty} a_{-m-1}(\\trefr;q) \\frac{q^{m^2-m+\\frac{1}{4}}}{(q^{m};q)_m} \n",
    "$$\n",
    "\n",
    "and\n",
    "\n",
    "$$\n",
    "\\hat{Z}_{b_0}(S_{+1}^{3}(\\trefl);W_{1};\\tau)\\sim 2a_{-1}(\\trefl;q)q^{-\\frac{1}{4}} + \n",
    "\\sum_{m=1}^{\\infty} a_{-m-1}(\\trefl;q)(-1)^m \\frac{q^{\\frac{m^2+m}{2}-\\frac{1}{4}}}{(q^{m};q)_m} \n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Z_0(nu=1,Sigma(2,3,7)):  (-1) + 1*q^2 + 1*q^3 + 1*q^8 + (-1)*q^13 + Order(q^20)\n",
      "Z_0(nu=1,-Sigma(2,3,7)):  2 + 1*q + 1*q^2 + 1*q^3 + 2*q^4 + 1*q^5 + 2*q^6 + 2*q^7 + 2*q^8 + 3*q^9 + 3*q^10 + 2*q^11 + 4*q^12 + 4*q^13 + 4*q^14 + 4*q^15 + 6*q^16 + 5*q^17 + 6*q^18 + 6*q^19 + Order(q^20)\n"
     ]
    }
   ],
   "source": [
    "b = 0\n",
    "zhat_surg = habiro_3r(-1)\n",
    "for n in range(7):\n",
    "    zhat_surg += habiro_3r(-n-1) * q**(n*(n-1))/q_pochhammer(n,q**(n))\n",
    "print(\"Z_0(nu=1,Sigma(2,3,7)): \",(1/q*zhat_surg).series(q,20))\n",
    "\n",
    "zhat_surg = habiro_3l(-1) \n",
    "for n in range(7):\n",
    "    zhat_surg += habiro_3l(-n-1) * (-1)**(n)*q**(n*(n+1)/2)/q_pochhammer(n,q**(n))\n",
    "print(\"Z_0(nu=1,-Sigma(2,3,7)): \",(-q*zhat_surg).series(q,20))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "vscode": {
     "languageId": "sage"
    }
   },
   "source": [
    "The $q$-expansions computed above match the $\\hat{Z}$ invariant for $\\Sigma(2,3,7)$, with a wilson line insertion in the highest weight $\\nu=1$ on the node with weight -7 and the $F_1$ order 7 mock theta function of Ramanujan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Zhat q^(3/4)(1 - 1q^(2) - 1q^(3) - 1q^(8) + 1q^(13) + 1q^(22) + 1q^(25) + O(q^26))\n",
      "F_1:  1*q + 1*q^2 + 1*q^3 + 2*q^4 + 1*q^5 + 2*q^6 + 2*q^7 + 2*q^8 + 3*q^9 + 3*q^10 + 2*q^11 + 4*q^12 + 4*q^13 + 4*q^14 + 4*q^15 + 6*q^16 + 5*q^17 + 6*q^18 + 6*q^19 + Order(q^20)\n"
     ]
    }
   ],
   "source": [
    "print(\"Zhat\", P.zhat([\"A\",1], b0, 20, wilson = [vector([0])]*3+[vector([1])]))\n",
    "F1 = sum(q**(n**2)/q_pochhammer(n,q**n) for n in range(1,30)).series(q,20)\n",
    "print(\"F_1: \", F1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "vscode": {
     "languageId": "sage"
    }
   },
   "source": [
    "$$\n",
    "\\def\\trefl{\\mathbb{3}_1^l}\n",
    "$$\n",
    "$$\n",
    "\\def\\trefr{\\mathbb{3}_1^r}\n",
    "$$\n",
    "$$\n",
    "\\def\\treflr{\\mathbb{3}_1^{l/r}}\n",
    "$$\n",
    "In the $\\nu=2$ case \n",
    "$$\n",
    "\\hat{Z}_{b_0}\\left(S_{\\pm 1}^{3}(\\treflr); W_{2}; \\tau\\right) \\sim  a_{-1}(\\treflr;q)\\, \\mathcal{L}_{\\pm 1}^{(2)}\\left[ x + 1 + x^{-1} \\right] \\\\+ \n",
    "\\sum_{m=1}^{\\infty} a_{-m-1}(\\treflr;q)\\mathcal{L}_{\\pm 1}^{(2)}  \\left[\\left(\\frac{ q^m + 1 + q^{-m}}{\\prod_{j=1}^{m} (x + x^{-1} - q^{j} - q^{-j})}+\\frac{1}{\\prod_{j=1}^{m-1} (x + x^{-1} - q^{j} - q^{-j})}\\right)\\right]\\\\\n",
    " \\sim  a_{-1}(\\treflr;q)\\, \\mathcal{L}_{\\pm 1}^{(2)}\\left[ x + 1 +  x^{-1} \\right] +a_{-2}(\\treflr;q)\\mathcal{L}_{\\pm 1}^{(2)}\\left[1\\right] +  \\\\ + \n",
    "\\sum_{m=1}^{\\infty}\\Bigg( a_{-m-1}(\\treflr;q)\\left(q^m + 1 + q^{-m}\\right)+a_{-m-2}(\\treflr;q)\\Bigg)\\mathcal{L}_{\\pm 1}^{(2)}  \\left[\\left(\\frac{1}{\\prod_{j=1}^{m} (x + x^{-1} - q^{j} - q^{-j})}\\right)\\right]\\\\\n",
    "\n",
    "$$\n",
    "\n",
    "which, using (2.20) reduces to\n",
    "$$\n",
    "\\hat{Z}_{b}\\left(S_{+1}^{3}(\\trefl); W_{2}; \\tau\\right) \n",
    " \\sim \\\\   a_{-1}(\\trefl;q)+a_{-2}(\\trefl;q)\n",
    " \\\\\n",
    "\\sum_{m=1}^{\\infty}\\bigg( a_{-m-1}(\\trefl;q)\\left(q^m + 1 + q^{-m}\\right)+a_{-m-2}(\\trefl;q)\\bigg)\\frac{(-1)^m q^{\\frac{m(m+1)}{2}}}{(q^{m+1};q)_m} \\Bigg)\n",
    "$$\n",
    "and\n",
    "$$\n",
    "\\hat{Z}_{b}\\left(S_{-1}^{3}(\\trefr); W_{2}; \\tau\\right) \n",
    " \\sim \\\\   a_{-1}(\\trefr;q)+a_{-2}(\\trefr;q)\n",
    " \\\\\n",
    "\\sum_{m=1}^{\\infty}\\bigg( a_{-m-1}(\\trefr;q)\\left(q^m + 1 + q^{-m}\\right)+a_{-m-2}(\\trefr;q)\\bigg)\\frac{q^{m^2}}{(q^{m+1};q)_m} \\Bigg)\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Z_0(nu=2):  (-1) + 1*q + 1*q^3 + 1*q^5 + (-1)*q^16 + Order(q^20)\n",
      "Z_0(nu=2):  (-1) + (-1)*q^2 + (-1)*q^4 + (-2)*q^6 + (-1)*q^8 + (-1)*q^9 + (-2)*q^10 + (-3)*q^12 + (-1)*q^13 + (-2)*q^14 + (-1)*q^15 + (-3)*q^16 + (-2)*q^17 + (-4)*q^18 + (-1)*q^19 + Order(q^20)\n"
     ]
    }
   ],
   "source": [
    "b = 0\n",
    "zhat_surg = (habiro_3r(-1)-2*q**2)\n",
    "for n in range(1,10):\n",
    "    zhat_surg += habiro_3r(-n-1) * q**(n*n)/q_pochhammer(n,q**(n+1))*(q**n+1+q**(-n))\n",
    "    zhat_surg += habiro_3r(-n-1) * q**((n-1)*(n-1))/q_pochhammer(n-1,q**(n))\n",
    "print(\"Z_0(nu=2): \",(1/q**2*zhat_surg).series(q,20))\n",
    "\n",
    "zhat_surg = 0#-2/q**2+habiro_3l(-1)\n",
    "for n in range(1,10):\n",
    "    #zhat_surg += habiro_3l(-n-1) * (-1)**(n)*q**(n*(n+1)/2)/q_pochhammer(n,q**(n+1))*(q**n+1+q**(-n))\n",
    "    zhat_surg += habiro_3l(-n-1) * (-1)**(n-1)*q**(n*(n-1)/2)/q_pochhammer(n-1,q**(n))\n",
    "print(\"Z_0(nu=2): \",(-q**1*zhat_surg).series(q,20))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "vscode": {
     "languageId": "sage"
    }
   },
   "source": [
    "The $q$-expansions computed above match the $\\hat{Z}$ invariant for $\\Sigma(2,3,7)$, with a wilson line insertion in the highest weight $\\nu=2$ on the node with weight -7 and the $F_2$ order 7 mock theta function of Ramanujan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Zhat q^(3/2)(1 - 1q^(1) - 1q^(3) - 1q^(5) + 1q^(16) + 1q^(20) + 1q^(26) + 1q^(31) - 1q^(53) - 1q^(60) + O(q^70))\n",
      "F_2:  1 + 1*q + 2*q^2 + 1*q^3 + 2*q^4 + 2*q^5 + 3*q^6 + 2*q^7 + 3*q^8 + 3*q^9 + 4*q^10 + 4*q^11 + 5*q^12 + 4*q^13 + 6*q^14 + 5*q^15 + 7*q^16 + 7*q^17 + 8*q^18 + 8*q^19 + Order(q^20)\n"
     ]
    }
   ],
   "source": [
    "print(\"Zhat\", P.zhat([\"A\",1], b0, 20, wilson = [vector([0])]*3+[vector([2])]))\n",
    "F2 = sum(q**(n**2+n)/q_pochhammer(n+1,q**(n+1)) for n in range(0,20)).series(q,20)\n",
    "print(\"F_2: \", F2)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "SageMath 10.5",
   "language": "sage",
   "name": "sagemath"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "sage",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
